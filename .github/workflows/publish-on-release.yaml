name: "Publish on Release"

on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        node-version: [ 22 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
          # Cache dependencies (npm)
      - name: Cache dependencies
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: deps-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            deps-${{ runner.os }}-${{ matrix.node-version }}-
      - run: npm ci
      - name: Login to docker
        run: echo ${{ secrets.GH_PAT }} | docker login ghcr.io -u USERNAME --password-stdin
      - name: Start database for testing
        run: |
          docker compose -f ./node_modules/@decaf-ts/for-couchdb/docker/docker-compose.yml up -d
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v4
        with:
          path: | 
            lib
            dist
          key: build-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            build-${{ runner.os }}-${{ matrix.node-version }}-
            
      - if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        run: npm run build:prod  # Replace with your build command 
      - run: npm run test:all
      - run: npm publish --access public
        env:
          GITHUB_TOKEN: ${{ secrets.CONSECUTIVE_ACTION_TRIGGER }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
